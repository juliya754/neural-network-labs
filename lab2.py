# -*- coding: utf-8 -*-
"""lab2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OqFaiFrGugOyyadbgkeoQFibEYkLAe-C
"""

import numpy as np
import pandas as pd
from sklearn.neural_network import MLPClassifier

from google.colab import files

uploaded = files.upload()

for fn in uploaded.keys():
  print('User uploaded file "{name}" with length {length} bytes'.format(
      name=fn, length=len(uploaded[fn])))

cancer = pd.read_csv("heart.csv", names = ["age","sex","pain type","blood preasure","cholestoral","sugar","electrocardiographic","max heart rate","include angina","oldpeak","the slope of the peak exercise ST segment","number of major vessels","thal","heart disease"], header=None)
cancer['sex']=pd.factorize(cancer['sex'])[0]
cancer['heart disease']=pd.factorize(cancer['heart disease'])[0]
cancer['sugar']=pd.factorize(cancer['sugar'])[0]
print(cancer)

y=cancer['heart disease']
x=cancer.drop(['heart disease'],axis=1)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)
max =0.
for i in range(1, 100):
  for j in range(1, 50):
    mlp=MLPClassifier(hidden_layer_sizes=(i,j))
    mlp.fit(x_train,y_train)
    res_train = mlp.score(x_train,y_train)
    res_test = mlp.score(x_test,y_test)
    if res_test > max and res_train > res_test:
      max_test = res_test
      max_train = res_train
      best_i = i
      best_j = j

print("i = ", best_i,", j = ", best_j)
print("Правильность на обучающем наборе: {:.2f}".format(max_train))
print("Правильность на тестовом наборе: {:.2f}".format(max_test))